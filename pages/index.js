import Head from 'next/head';
import Link from 'next/link';
import { useSession, signOut, getSession } from 'next-auth/react';

export default function Home() {
  const { data: session } = useSession();

  function handleSignOut() {
    signOut();
  }

  return (
    <div>
      <Head>
        <title>Home Page</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      {session ? AutorizeUser({ session, handleSignOut }) : Guest()}
    </div>
  );
}

// Guest

function Guest() {
  return (
    <main className='container mx-auto text-center py-20'>
      <h3 className='text-4xl font-bold'>Guest Homepage</h3>

      <div className='flex justify-center'>
        <Link href={'/login'} legacyBehavior>
          <a className='mt-5 px-10 py-1 rounded-sm bg-indigo-500 text-gray-50'>
            Sign In
          </a>
        </Link>
      </div>
    </main>
  );
}

// Autorize User

function AutorizeUser({ session, handleSignOut }) {
  return (
    <main className='container mx-auto text-center py-20'>
      <h3 className='text-4xl font-bold'>Autorize User Homepage</h3>

      <div className='details mt-5'>
        <h5>{session.user.name}</h5>
        <h5>{session.user.email}</h5>
      </div>

      <div className='flex justify-center'>
        <button
          type='submit'
          className='mt-5 px-10 py-1 rounded-sm bg-indigo-500 text-gray-50'
          onClick={handleSignOut}
        >
          Sign Out
        </button>
      </div>

      <div className='flex justify-center'>
        <Link href={'/profile'} legacyBehavior>
          <a className='mt-5 px-10 py-1 rounded-sm bg-indigo-500 text-gray-50'>
            Profile Page
          </a>
        </Link>
      </div>
    </main>
  );
}

export async function getServerSideProps({ req }) {
  const session = await getSession({ req });

  if (!session) {
    return {
      redirect: {
        destination: '/login',
        permanent: false,
      },
    };
  }

  return {
    props: { session },
  };
}
